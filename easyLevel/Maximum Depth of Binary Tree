Given a binary tree, find its maximum depth.

The maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.

Note: A leaf is a node with no children.

Example:

Given binary tree [3,9,20,null,null,15,7],

    3
   / \
  9  20
    /  \
   15   7
return its depth = 3.

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int x) { val = x; }
 * }
 */
/*
二分木の高さを求める
二叉树的深度为根节点到最远叶子节点的最长路径上的节点数。
说明: 叶子节点是指没有子节点的节点。
*/
public class Solution {
    public int MaxDepth(TreeNode root) {
        if(root == null){
            return 0;
        }else{
            int leftHeight= MaxDepth(root.left);
            int rightHeight = MaxDepth(root.right);
            return Math.Max(leftHeight, rightHeight) + 1;
        }
    }
}
